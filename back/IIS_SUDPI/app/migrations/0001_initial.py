# Generated by Django 5.1.2 on 2025-09-29 12:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Artikal",
            fields=[
                ("sifra_a", models.AutoField(primary_key=True, serialize=False)),
                ("naziv_a", models.CharField(max_length=200)),
                (
                    "osnovna_cena_a",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("rok_trajanja_a", models.DateField()),
                (
                    "status_trajanja",
                    models.CharField(
                        choices=[
                            ("aktivan", "Aktivan"),
                            ("istice", "Uskoro ističe"),
                            ("istekao", "Istekao"),
                        ],
                        default="aktivan",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "artikal",
            },
        ),
        migrations.CreateModel(
            name="Dobavljac",
            fields=[
                ("sifra_d", models.AutoField(primary_key=True, serialize=False)),
                ("naziv", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254)),
                ("PIB_d", models.CharField(max_length=20, unique=True)),
                ("ime_sirovine", models.CharField(max_length=200)),
                ("cena", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "rok_isporuke",
                    models.IntegerField(help_text="Rok isporuke u danima"),
                ),
                (
                    "ocena",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("datum_ocenjivanja", models.DateField()),
                ("izabran", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "dobavljac",
            },
        ),
        migrations.CreateModel(
            name="Faktura",
            fields=[
                ("sifra_f", models.AutoField(primary_key=True, serialize=False)),
                ("iznos_f", models.DecimalField(decimal_places=2, max_digits=12)),
                ("datum_prijema_f", models.DateField()),
                ("rok_placanja_f", models.DateField()),
                (
                    "status_f",
                    models.CharField(
                        choices=[
                            ("primljena", "Primljena"),
                            ("verifikovana", "Verifikovana"),
                            ("isplacena", "Isplaćena"),
                            ("odbijena", "Odbijena"),
                        ],
                        default="primljena",
                        max_length=20,
                    ),
                ),
                ("razlog_cekanja_f", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "faktura",
            },
        ),
        migrations.CreateModel(
            name="KategorijaProizvoda",
            fields=[
                ("sifra_kp", models.AutoField(primary_key=True, serialize=False)),
                ("naziv_kp", models.CharField(max_length=200)),
                ("limit_kp", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                "db_table": "kategorija_proizvoda",
            },
        ),
        migrations.CreateModel(
            name="Skladiste",
            fields=[
                ("sifra_s", models.AutoField(primary_key=True, serialize=False)),
                ("mesto_s", models.CharField(max_length=200)),
                (
                    "status_rizika_s",
                    models.CharField(
                        choices=[
                            ("nizak", "Nizak rizik"),
                            ("umeren", "Umeren rizik"),
                            ("visok", "Visok rizik"),
                        ],
                        default="nizak",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "skladiste",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("sifra_k", models.AutoField(primary_key=True, serialize=False)),
                ("ime_k", models.CharField(max_length=100)),
                ("prz_k", models.CharField(max_length=100)),
                ("mail_k", models.EmailField(max_length=254, unique=True)),
                (
                    "tip_k",
                    models.CharField(
                        choices=[
                            ("logisticki_koordinator", "Logistički koordinator"),
                            ("skladisni_operater", "Skladišni operater"),
                            ("nabavni_menadzer", "Nabavni menadžer"),
                            ("finansijski_analiticar", "Finansijski analitičar"),
                            ("kontrolor_kvaliteta", "Kontrolor kvaliteta"),
                            ("administrator", "Administrator"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "korisnik",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Administrator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="administrator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "administrator",
            },
        ),
        migrations.CreateModel(
            name="FinansijskiAnaliticar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finansijski_analiticar",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "finansijski_analiticar",
            },
        ),
        migrations.CreateModel(
            name="Izvestaj",
            fields=[
                ("sifra_i", models.AutoField(primary_key=True, serialize=False)),
                ("datum_i", models.DateTimeField(auto_now_add=True)),
                (
                    "tip_i",
                    models.CharField(
                        choices=[
                            ("zalihe", "Izveštaj o zalihama"),
                            ("finansijski", "Finansijski izveštaj"),
                            ("dobavljaci", "Izveštaj o dobavljačima"),
                            ("kvalitet", "Izveštaj o kvalitetu"),
                            ("temperature", "Izveštaj o temperaturama"),
                        ],
                        max_length=30,
                    ),
                ),
                ("sadrzaj_i", models.TextField()),
                (
                    "kreirao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="izvestaji",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "izvestaj",
            },
        ),
        migrations.CreateModel(
            name="KontrolorKvaliteta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kontrolor_kvaliteta",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "kontrolor_kvaliteta",
            },
        ),
        migrations.CreateModel(
            name="LogistickiKoordinator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logisticki_koordinator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "logisticki_koordinator",
            },
        ),
        migrations.CreateModel(
            name="NabavniMenadzer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nabavni_menadzer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "nabavni_menadzer",
            },
        ),
        migrations.CreateModel(
            name="Notifikacija",
            fields=[
                ("sifra_n", models.AutoField(primary_key=True, serialize=False)),
                ("poruka_n", models.TextField()),
                ("datum_n", models.DateTimeField(auto_now_add=True)),
                ("procitana_n", models.BooleanField(default=False)),
                ("link_n", models.URLField(blank=True, null=True)),
                (
                    "korisnik",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifikacije",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "notifikacija",
                "ordering": ["-datum_n"],
            },
        ),
        migrations.CreateModel(
            name="Popust",
            fields=[
                ("sifra_p", models.AutoField(primary_key=True, serialize=False)),
                (
                    "predlozena_cena_a",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("datum_pocetka_vazenja_p", models.DateField()),
                ("datum_kraja_vazenja_p", models.DateField()),
                (
                    "artikli",
                    models.ManyToManyField(
                        blank=True, related_name="popusti", to="app.artikal"
                    ),
                ),
            ],
            options={
                "db_table": "popust",
            },
        ),
        migrations.CreateModel(
            name="Poseta",
            fields=[
                ("poseta_id", models.AutoField(primary_key=True, serialize=False)),
                ("datum_od", models.DateTimeField()),
                ("datum_do", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("zakazana", "Zakazana"),
                            ("u_toku", "U toku"),
                            ("zavrsena", "Završena"),
                            ("otkazana", "Otkazana"),
                        ],
                        default="zakazana",
                        max_length=20,
                    ),
                ),
                (
                    "dobavljac",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posete",
                        to="app.dobavljac",
                    ),
                ),
                (
                    "kontrolor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posete",
                        to="app.kontrolorkvaliteta",
                    ),
                ),
            ],
            options={
                "db_table": "poseta",
            },
        ),
        migrations.CreateModel(
            name="Proizvod",
            fields=[
                ("sifra_pr", models.AutoField(primary_key=True, serialize=False)),
                ("naziv_pr", models.CharField(max_length=200)),
                ("opis_pr", models.TextField()),
                (
                    "kategorija",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proizvodi",
                        to="app.kategorijaproizvoda",
                    ),
                ),
            ],
            options={
                "db_table": "proizvod",
            },
        ),
        migrations.CreateModel(
            name="Reklamacija",
            fields=[
                ("reklamacija_id", models.AutoField(primary_key=True, serialize=False)),
                ("datum_prijema", models.DateField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("prijem", "Prijem"),
                            ("analiza", "Analiza"),
                            ("odgovor", "Odgovor"),
                            ("zatvaranje", "Zatvaranje"),
                        ],
                        default="prijem",
                        max_length=20,
                    ),
                ),
                ("opis_problema", models.TextField()),
                (
                    "vreme_trajanja",
                    models.IntegerField(help_text="Vreme trajanja u danima"),
                ),
                (
                    "jacina_zalbe",
                    models.IntegerField(
                        help_text="Jačina žalbe na skali 1-10",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "dobavljac",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reklamacije",
                        to="app.dobavljac",
                    ),
                ),
                (
                    "kontrolor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reklamacije",
                        to="app.kontrolorkvaliteta",
                    ),
                ),
            ],
            options={
                "db_table": "reklamacija",
            },
        ),
        migrations.CreateModel(
            name="Sertifikat",
            fields=[
                ("sertifikat_id", models.AutoField(primary_key=True, serialize=False)),
                ("naziv", models.CharField(max_length=200)),
                (
                    "tip",
                    models.CharField(
                        choices=[
                            ("ISO", "ISO"),
                            ("HACCP", "HACCP"),
                            ("GMP", "GMP"),
                            ("BRC", "BRC"),
                            ("IFS", "IFS"),
                            ("ostalo", "Ostalo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("datum_izdavanja", models.DateField()),
                ("datum_isteka", models.DateField()),
                (
                    "dobavljac",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sertifikati",
                        to="app.dobavljac",
                    ),
                ),
            ],
            options={
                "db_table": "sertifikat",
            },
        ),
        migrations.CreateModel(
            name="SkladisniOperater",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "korisnik",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skladisni_operater",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "skladisni_operater",
            },
        ),
        migrations.CreateModel(
            name="SeBavi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datum_dodele", models.DateTimeField(auto_now_add=True)),
                (
                    "artikal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.artikal"
                    ),
                ),
                (
                    "skladisni_operater",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.skladisnioperater",
                    ),
                ),
            ],
            options={
                "db_table": "se_bavi",
                "unique_together": {("skladisni_operater", "artikal")},
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                ("sifra_d", models.AutoField(primary_key=True, serialize=False)),
                ("datum_d", models.DateTimeField(auto_now_add=True)),
                (
                    "finansijski_analiticar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboards",
                        to="app.finansijskianaliticar",
                    ),
                ),
                (
                    "nabavni_menadzer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboards",
                        to="app.nabavnimenadzer",
                    ),
                ),
                (
                    "skladisni_operater",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboards",
                        to="app.skladisnioperater",
                    ),
                ),
            ],
            options={
                "db_table": "dashboard",
            },
        ),
        migrations.AddField(
            model_name="artikal",
            name="skladisni_operateri",
            field=models.ManyToManyField(
                blank=True, through="app.SeBavi", to="app.skladisnioperater"
            ),
        ),
        migrations.CreateModel(
            name="StavkaFakture",
            fields=[
                ("sifra_sf", models.AutoField(primary_key=True, serialize=False)),
                ("naziv_sf", models.CharField(max_length=200)),
                (
                    "kolicina_sf",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("cena_po_jed", models.DecimalField(decimal_places=2, max_digits=10)),
                ("opis_sf", models.TextField(blank=True)),
                (
                    "faktura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stavke",
                        to="app.faktura",
                    ),
                ),
                (
                    "proizvod",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stavke_fakture",
                        to="app.proizvod",
                    ),
                ),
            ],
            options={
                "db_table": "stavka_fakture",
            },
        ),
        migrations.CreateModel(
            name="Temperatura",
            fields=[
                ("id_merenja", models.AutoField(primary_key=True, serialize=False)),
                (
                    "vrednost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Temperatura u Celzijusima",
                        max_digits=5,
                    ),
                ),
                ("vreme_merenja", models.DateTimeField(auto_now_add=True)),
                (
                    "skladiste",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temperature",
                        to="app.skladiste",
                    ),
                ),
            ],
            options={
                "db_table": "temperatura",
            },
        ),
        migrations.CreateModel(
            name="Transakcija",
            fields=[
                ("sifra_t", models.AutoField(primary_key=True, serialize=False)),
                ("datum_t", models.DateTimeField(auto_now_add=True)),
                ("potvrda_t", models.CharField(max_length=100, unique=True)),
                (
                    "status_t",
                    models.CharField(
                        choices=[
                            ("na_cekanju", "Na čekanju"),
                            ("uspesna", "Uspešna"),
                            ("neuspesna", "Neuspešna"),
                        ],
                        default="na_cekanju",
                        max_length=20,
                    ),
                ),
                (
                    "faktura",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transakcija",
                        to="app.faktura",
                    ),
                ),
            ],
            options={
                "db_table": "transakcija",
            },
        ),
        migrations.CreateModel(
            name="Ugovor",
            fields=[
                ("sifra_u", models.AutoField(primary_key=True, serialize=False)),
                ("datum_potpisa_u", models.DateField()),
                ("datum_isteka_u", models.DateField()),
                (
                    "status_u",
                    models.CharField(
                        choices=[
                            ("aktivan", "Aktivan"),
                            ("istekao", "Istekao"),
                            ("otkazan", "Otkazan"),
                        ],
                        default="aktivan",
                        max_length=20,
                    ),
                ),
                ("uslovi_u", models.TextField()),
                (
                    "dobavljac",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ugovori",
                        to="app.dobavljac",
                    ),
                ),
            ],
            options={
                "db_table": "ugovor",
            },
        ),
        migrations.CreateModel(
            name="Penal",
            fields=[
                ("sifra_p", models.AutoField(primary_key=True, serialize=False)),
                ("razlog_p", models.TextField()),
                ("iznos_p", models.DecimalField(decimal_places=2, max_digits=10)),
                ("datum_p", models.DateField(auto_now_add=True)),
                (
                    "ugovor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="penali",
                        to="app.ugovor",
                    ),
                ),
            ],
            options={
                "db_table": "penal",
            },
        ),
        migrations.AddField(
            model_name="faktura",
            name="ugovor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fakture",
                to="app.ugovor",
            ),
        ),
        migrations.CreateModel(
            name="Zalihe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trenutna_kolicina_a",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("datum_azuriranja", models.DateTimeField(auto_now=True)),
                (
                    "artikal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zalihe",
                        to="app.artikal",
                    ),
                ),
                (
                    "skladiste",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zalihe",
                        to="app.skladiste",
                    ),
                ),
            ],
            options={
                "db_table": "zalihe",
                "unique_together": {("artikal", "skladiste")},
            },
        ),
    ]
